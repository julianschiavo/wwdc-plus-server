<!DOCTYPE html>
<html>

<head>
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0" />
  <meta property="og:site_name" content="#(name) - DubDub+ Events" />
  <meta name="apple-mobile-web-app-status-bar-style" content="black">
  <meta name="apple-itunes-app" content="app-id=1458485759, app-argument=wwdcplus://openevent?id=#(id)">
  <!-- Twitter Cards -->
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content="#(name) - DubDub+ Events" />
  <meta name="twitter:url" content="https://events.wwdc.plus/#(slug)" />
  <meta name="twitter:creator" content="justJS" />
  <!-- Facebook OG -->
  <meta property="og:title" content="#(name) - DubDub+ Events" />
  <meta property="og:type" content="website" />
  <meta property="og:url" content="https://events.wwdc.plus/#(slug)" />
  <meta property="og:locale" content="en_us" />
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <title>#(name) - DubDub+ Events</title>
  <link rel="stylesheet" href="base.css">
  <link rel="stylesheet" href="https://wwdc.date/assets/css/fonts.css">
</head>

<body>
  <h2 class="base">DubDub+ Events</h2>
  <div class="base icon-container unselectable">
    <a class="link" href="/">
      <div class="content breadcrumb">
        <img class="chevron icon" src="/chevron-left-light.png">
        <p class="aligned-with-icon">All Events</p>
      </div>
    </a>
  </div>
  <br>
  <div class="base content">
    <h4 id="title">#(name)</h4>
    <p id="description">#(description)</p>
  </div>
  #if(ticketLink != nil) {
    <a class="link" href=#(ticketLink)>
      <div class="base content icon-container">
        <img class="icon unselectable" src="/tickets.png">
        <div class="aligned-with-icon">
          <h5 id="date">Buy Tickets</h5>
        </div>
        <img class="icon chevron right unselectable" src="/chevron-right-light.png">
      </div>
    </a>
  }
  #if(moreInfoLink != nil) {
    <a class="link" href=#(moreInfoLink)>
      <div class="base content icon-container">
        <img class="icon unselectable" src="/info.png">
        <div class="aligned-with-icon">
          <h5 id="date">More Info</h5>
        </div>
        <img class="icon chevron right unselectable" src="/chevron-right-light.png">
      </div>
    </a>
  }
  <div class="base content icon-container">
    <img class="icon unselectable" src="/calendar.png">
    <div class="aligned-with-icon">
      <h5 id="date">#(date)</h5>
      <p id="time">#(time)</p>
    </div>
  </div>
  <div class="base content icon-container">
    <img class="icon unselectable" src="/location.png">
    <div class="aligned-with-icon">
      <h5 id="place"></h5>
      <p id="address"></p>
    </div>
    <div class="map" id="map"></div>
  </div>
  <a class="link" href="wwdcplus://openevent?id=#(id)">
    <div class="base content sent-with icon-container unselectable">
      <img class="icon" src="https://wwdc.plus/event/appicon.png">
      <p class="aligned-with-icon">Open in DubDub+</p>
    </div>
  </a>
  <a class="link" href="https://wwdc.plus">
    <div class="base content sent-with icon-container unselectable">
      <img class="icon" src="https://wwdc.plus/event/appicon.png">
      <p class="aligned-with-icon">Get DubDub+</p>
    </div>
  </a>
</body>
<script src="https://cdn.apple-mapkit.com/mk/5.x.x/mapkit.js"></script>
<script>
  var placeName = ""
  var address = ""
  var hasOneListenerFired = false

  #if(placeName != nil) {
    placeName = "#(placeName)"
  }

  function addAnnotation(coordinates, placeName, address) {
    let annotation = new mapkit.MarkerAnnotation(coordinates, {
      title: placeName,
      subtitle: address,
      color: "#12182f",
      displayPriority: 1000
    })
    map.addAnnotation(annotation)
  }

  function updateLocationOnDOM() {
    if (hasOneListenerFired == true) {
      document.getElementById('place').innerText = placeName
      document.getElementById('address').innerText = address
    }
    hasOneListenerFired = true
  }

  function lookupCoordinates(coordinates) {
    let geocoder = new mapkit.Geocoder({
      language: "en",
      getsUserLocation: false
    })

    geocoder.reverseLookup(coordinates, function(error, data) {
      address = data.results[0].formattedAddress.split(', ').join('\n')
      #if(placeName == nil) {
          placeName = data.results[0].formattedAddress.split(', ')[0]
          address = data.results[0].formattedAddress.split(', ').slice(1).join('\n')
      }

      addAnnotation(coordinates, placeName, address)
      updateLocationOnDOM()
    })
  }
</script>
<script>
  document.addEventListener("DOMContentLoaded", updateLocationOnDOM)

  mapkit.init({
    authorizationCallback: function(token) {
      token(
        "eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NiIsImtpZCI6IlIzWFc1VzNXSEYifQ.eyJpc3MiOiI3NE44SzVKMk43IiwiZXhwIjoyNDIxMDk3NDc0LjMwOTkwMjIsImlhdCI6MTU1NzA5NzQ3NC4zMDk5MDJ9.1LLOTu0zf8B2nhsiv_K9m4M5nSiZaF_3wEGCWcbLjtv3_awnQKSKcBSHTc9rqyFZgyxKpZhf8ahyO0wveKdCnA"
      )
    }
  });

  var map = new mapkit.Map("map", {
    mapType: mapkit.Map.MapTypes.MutedStandard,
    tintColor: "#121a2f",
    colorScheme: mapkit.Map.ColorSchemes.Dark,
    showsCompass: false,
    showsUserLocation: true,
    showsMapTypeControl: false
  });

  mapkit.addEventListener("configuration-change", function(event) {
    if (event.status == "Initialized") {
      let coordinates = new mapkit.Coordinate(#(latitude), #(longitude))
      let span = new mapkit.CoordinateSpan(0.005, 0.005)
      let region = new mapkit.CoordinateRegion(coordinates, span)
      map.region = region

      lookupCoordinates(coordinates)
    }
  })
</script>

</html>
